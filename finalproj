print('hello world')
'''Required filetypes: h5ad, mtx, rds, tsv.gz, txt.gz, h5, h5seurat, fastq?, bcl?, csv?'''
import scanpy as sc
import streamlit as st
#could do buttons in streamlit to select infile/outfile types, that way inputs are controlled
# st.download_button("Download file", file) 
class FileConverter:
    FileConverter.supported_formats = ['h5ad', 'mtx', 'csv', 'txt']
    def __init__(self, infile, outformat): 
        '''if self.filetypeidentifier(infile) == 'mtx' and self.filetypeidentifier(outfile) == 'h5ad':
            self.outfile = self.matrix_to_h5ad(infile, outfilename)'''
            #call correct method
        self.infile = infile
        self.outformat = outformat
        self.outfile = None
    
    def convert_file(self):
        #just-in-case checks; shouldn't be necessary since should be checked in streamlit

        if self.outformat not in FileConverter.supported_formats:
            st.error(f'Output format '{self.outformat}' is not supported.')
    

    # mtx infile methods:
    '''def mtx_to_h5ad(self, mtxfile, h5adfilename):
        #with open mtxfile as mtx:
        inf = sc.read_mtx(mtxfile)     #could create an AnnData obj, caching data (optional) helps speed reading process 
        outf = inf.write(h5adfilename)
        return outf
    def mtx_to_h5(self, mtxfile, h5file):
        inf = sc.read_mtx(mtxfile)
        outf = inf.write(h5file) 
        return outf
    def mtx_to_h5seurat(self, mtxfile, h5seuratfile):
        pass
    def mtx_to_loom(self, mtxfile, loomfile):
        pass
    def mtx_to_rds(self, mtxfile, rdsfile):
        pass
    def mtx_to_tsvgz(self, mtxfile, tsvgzfile):
        pass
    def mtx_to_txtgz(self, mtxfile, txtgzfile):
        pass
    
    #h5ad infile methods:
    def h5ad_to_h5(self, h5adfile, h5file):
        
    def h5ad_to_h5seurat(self, h5adfile, h5seuratfile):
        pass
    def h5ad_to_loom(self, h5adfile, loomfile):
        inf = sc.read_h5ad(h5adfile) #inf is anndata file object
        outf = inf.write_loom(loomfile)
        return outf
    def h5ad_to_mtx(self, h5adfile, mtxfile):
        pass
    def h5ad_to_rds(self, h5adfile, rdsfile):
        pass
    def h5ad_to_tsvgz(self, h5adfile, tsvgzfile):
        pass
    def h5ad_to_txtgz(self, h5adfile, txtgzfile):
        pass

    def filetypeidentifier(self, file): #necessary?
        pass'''
#change
#look online for example files
#rds files are more general
#look at anndata

#from AnnData import read_h5ad (& return desired file type?)
# anndata.read_h5ad(filename, backed=None, *, as_sparse=(), as_sparse_fmt=<class 'scipy.sparse._csr.csr_matrix'>, chunk_size=6000)[source]
